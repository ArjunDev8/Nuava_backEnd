type Query {
  student: Student!
  coach: Coach!
  getAllTournaments: [Tournament]
}

type Mutation {
  sendStudentEmailOTP(input: OtpInput!): OtpResult!
  verifyEmailOTP(input: VerifyInput!): VerifyEmailResponse!
  registerStudent(input: RegisterStudentInput!): RegisterStudentResponse!
  loginStudent(input: LoginStudentInput!): LoginStudentResponse!

  sendCoachEmailOTP(input: CoachOTPInput!): OtpResult!
  verifyCoachEmailOTP(input: VerifyInput!): VerifyEmailResponse!
  registerCoach(input: RegisterCoachInput!): RegisterCoachResponse!
  loginCoach(input: LoginCoachInput!): LoginCoachResponse!

  forgotPassword(input: ForgotPasswordRequest!): Result!
  resetPassword(input: ResetPasswordInput!): Result!

  createTournament(input: CreateTournamentInput!): CreateTournamentResponse!
}

# type Subscription {

# }
